<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ca.usherbrooke.gegi.server.persistence.ReponseMapper">

    <select id="select" resultType="ca.usherbrooke.gegi.server.business.Reponse">
        SELECT * FROM astanble.reponse;
    </select>

    <select id="selectByQuestion" resultType="ca.usherbrooke.gegi.server.business.Reponse">
        SELECT * FROM astanble.view_reponse_quizname WHERE id_question = #{id_question};
    </select>

    <select id="selectByName" resultType="ca.usherbrooke.gegi.server.business.Reponse">
        SELECT * FROM astanble.view_reponse_quizname
        WHERE nom_quiz = #{name};

    </select>

    <select id="selectByID" resultType="ca.usherbrooke.gegi.server.business.Reponse">
        SELECT * FROM astanble.reponse WHERE id_reponse =#{id_reponse};
    </select>

    <select id="selectByAuthor" resultType="ca.usherbrooke.gegi.server.business.Reponse">
        SELECT * FROM astanble.view_quiz_usager_reponse
        WHERE cip = #{auteur} AND nom_relation = 'Auteur' OR nom_relation = 'Co-Auteur'

    </select>

    <select id="selectByUserDateQuiz" resultType="ca.usherbrooke.gegi.server.business.ReponseUsager">
        SELECT reponse_usager_question.id_reponse_usager_question, reponse_usager_question.id_question, reponse_usager_question.id_reponse,
               reponse_usager_question.cip, reponse_usager_question.reponse_usager, reponse_usager_question.bonne_reponse,
               reponse_usager_question.date_time_response FROM astanble.question
        LEFT JOIN astanble.reponse_usager_question ON reponse_usager_question.id_question = question.id_question
        WHERE reponse_usager_question.cip = #{cip}
                  AND  id_quiz = #{id_quiz}
                    AND date_time_response = #{time}::timestamp
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="reponse.id_reponse" keyColumn="id_reponse">
        INSERT INTO astanble.reponse(
            reponse_content,
            bonne_mauvaise,
            id_question
        )
        VALUES (#{reponse.reponse_content},
                #{reponse.bonne_mauvaise},
                #{reponse.id_question})
    </insert>
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="reponseUser.id_reponse_usager_question" keyColumn="id_reponse_usager_question">
        INSERT INTO astanble.reponse_usager_question(
            id_question,
        <if test="reponseUser.id_reponse != 0">
            id_reponse,
        </if>
            CIP,
            reponse_usager,
            bonne_reponse,
            date_time_response
        )
        VALUES (#{reponseUser.id_question},
            <if test="reponseUser.id_reponse != 0">
                #{reponseUser.id_reponse},
            </if>
                #{reponseUser.usager.cip},
                #{reponseUser.reponse_usager},
                #{reponseUser.bonne_reponse},
                #{reponseUser.date_time_response}::timestamp)
    </insert>

    <update id="update">
        UPDATE astanble.reponse
        SET reponse_content= #{reponse.reponse_content},
            bonne_mauvaise=#{reponse.bonne_mauvaise},
            id_question=#{reponse.id_question}
        WHERE id_reponse=#{reponse.id_reponse}::int
    </update>

    <delete id="delete">
        DELETE FROM astanble.reponse
        WHERE id_reponse=#{id_reponse}::int
    </delete>


</mapper>
